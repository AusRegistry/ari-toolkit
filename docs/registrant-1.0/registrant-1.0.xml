<?xml version='1.0'?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
    <!ENTITY rfc2119 PUBLIC '' 
      'http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml'>
    <!ENTITY rfc5730 PUBLIC '' 
      'http://xml.resource.org/public/rfc/bibxml/reference.RFC.5730.xml'>
    <!ENTITY rfc3629 PUBLIC '' 
      'http://xml.resource.org/public/rfc/bibxml/reference.RFC.3629.xml'>
    <!ENTITY rfc2781 PUBLIC '' 
      'http://xml.resource.org/public/rfc/bibxml/reference.RFC.2781.xml'>
    <!ENTITY w3crec-xml-20040204 PUBLIC '' 
      'http://xml.resource.org/public/rfc/bibxml4/reference.W3C.REC-xml-20040204.xml'>
    <!ENTITY w3crec-xmlschema-1-20041028 PUBLIC '' 
      'http://xml.resource.org/public/rfc/bibxml4/reference.W3C.REC-xmlschema-1-20041028.xml'>      
    <!ENTITY ausreg-kv-1.0 PUBLIC '' '../kv-1.0/kv-1.0-ref.xml'>
]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<?rfc private='EPP Registrant Transfer Mapping'?>

<?rfc compact='yes'?>
<?rfc subcompact='no'?>

<?rfc docmapping='yes'?>
<?rfc editing='no'?>
<?rfc strict='yes'?>
<?rfc symrefs='yes'?>

<?rfc toc='yes'?>
<?rfc tocindent='yes'?>
<rfc>
  <front>
    <title abbrev="EPP Registrant Transfer Mapping">
    Registrant Transfer Mapping for the Extensible Provisioning Protocol (EPP)
    </title>
    <author initials='J.' surname='Mitchell' fullname='James Mitchell'>
      <organization>AusRegistry Pty Ltd</organization>
      <address>
        <email>support@ausregistry.com.au</email>
      </address>
    </author>
    <date month='September' year='2010' />
    <abstract>
      <t>This document describes an Extensible Provisioning Protocol
        (EPP) extension mapping for the transfer of a domain name
        registrant. Specified in XML, this mapping extends the core EPP
        protocol to provide one additional command required for the
        transfer of a domain name registrant.
      </t>
    </abstract>
    <note title="Status of This Document">
      <t>This document specifies an extension to the EPP protocol first
        implemented in AusRegistry's Domain Name Registry EPP service.
        Discussion and suggestions for improvements are welcome. Please
        refer to AusRegistry for more information on the status of this
        document. Distribution of this document and use of the protocol
        extensions defined within is unrestricted and unlimited.
      </t>
    </note>
    <note title="Copyright Notice">
      <t>Copyright (C) AusRegistry International Pty Ltd (2010)
      </t>
    </note>
  </front>
  <middle>
    <section title='Introduction' anchor="Intro" toc="default">
      <t>
        This document describes an protocol extension for version 1.0 of
        the
        Extensible Provisioning Protocol (EPP) that allows for the
        transport of a domain name's registrant. This
        extension is specified using the Extensible Markup Language
        (XML) 1.0, as
        described in
        <xref target="W3C.REC-xml-20040204" />
        , and XML
        Schema notation, as described in
        <xref target="W3C.REC-xmlschema-1-20041028" />
        and [W3C.REC-xmlschema-2-20041028].
      </t>
      <t>
        The EPP core protocol specification
        <xref target="RFC5730" />
        provides a
        complete description of EPP command and response
        structures. A
        thorough understanding of the base protocol and
        specification of
        relevant extensions is necessary to understand the extension in this 
        document.  In addition, this document makes use of elements defined in 
        <xref target="AR.KV-1.0" /> to represent key-value data associated with a domain name.
      </t>
      <section title="Conventions Used In This Document">
        <t>
          The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
          NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and
          "OPTIONAL" in this document are to be interpreted as described
          in
          <xref target="RFC2119" />
          .
        </t>
        <t>In examples, "C:" represents lines sent by a protocol client
          and "S:" represents lines returned by a protocol server.
          Indentation and white space in examples are provided only to
          illustrate element relationships and are not a REQUIRED
          feature of this protocol.
        </t>
      </section>
    </section>
    <section title="EPP Protocol Extension" toc="default">
      <t>
        A detailed description of the EPP syntax and semantics can be
        found in the EPP core protocol specification
        <xref target="RFC5730" />. The protocol extensions described here 
        are specifically for use in supporting transfer of domain registrant.
      </t>
      <t> The EPP extension framework allows for definition of new
        protocol elements identified using XML namespace notation with a
        reference to an XML schema that defines the namespace. The
        &lt;epp&gt; element that identifies the beginning of a protocol
        instance includes multiple child element choices, one of which
        is an &lt;extension&gt; element whose children define the
        extension. For example, a protocol extension element would be
        described in generic terms as follows: 
      </t>
      <section title="Command Format" toc="default">
        <t>
          An EPP client interacts with an EPP server by sending a
          command to the server and receiving a response from the
          server. A detailed description of the EPP syntax and semantics 
          can be found in <xref target="RFC5730" />.  This document describes 
          an additional EPP domain transform command, &lt;registrantTransfer&gt;, 
          specifically for use in transferring a domain name's registrant.
        </t> 
        <section title="EPP &lt;registrantTransfer&gt; Command" toc="default">
          <t>This specification defines an additional EPP command to allow a client 
          to request a transfer of domain registrant.  In addition to the 
          standard EPP elements, an EPP command contains the following elements:
          <list style="symbols">
            <t>A &lt;registrantTransfer&gt; element.
            </t>
            <t>An OPTIONAL &lt;clTRID&gt; (client transaction
              identifier) element that MAY be used to uniquely identify
              the command to the client. Clients are responsible for
              maintaining their own transaction identifier space to
              ensure uniqueness.
            </t>
          </list>
          </t>
          <t>The &lt;registrantTransfer&gt; element contains the following 
          child elements:
            <list style="symbols">
              <t>A &lt;name&gt; element that contains the fully qualified
                name of the domain object for which the transfer of
                registrant is being requested.
              </t>
              <t>A &lt;curExpDate&gt; element that contains the date on
                which the current validity period ends. This value ensures
                that repeated &lt;registrantTransfer&gt; commands do not
                result in multiple, unanticipated successful transfers of
                registrant.
              </t>
              <t>An OPTIONAL &lt;period&gt; element that contains the
                number of units to be added to the registration period of
                the domain object. The number of units available MAY be
                subject to limits imposed by the server.
              </t>
              <t>A &lt;kvlist&gt; element that contain the
                list of key-value items to be associated with the
                specified domain. A MANDATORY "name" attribute MUST be
                present to identify the name of the key-value list. The 
                &lt;kvlist&gt; element MUST identify the kv
                namespace, as defined in <xref target="AR.KV-1.0" />. 
              </t>
              <t>An OPTIONAL &lt;explanation&gt; element that explains the purpose 
              of the update, e.g. a correction of a spelling mistake.
              </t>
            </list>
          </t>
        <figure>
          <preamble>Example &lt;registrantTransfer&gt; command:</preamble>
          <artwork><![CDATA[
C:<epp xmlns="urn:ietf:params:xml:ns:epp-1.0">
C:  <extension>
C:    <command xmlns="urn:X-ar:params:xml:ns:registrant-1.0">
C:      <registrantTransfer>
C:        <name>example.com.au</name>
C:        <curExpDate>1999-04-03Z</curExpDate>
C:        <period unit="y">2</period>
C:        <kvlist name="au" xmlns="urn:X-ar:params:xml:ns:kv-1.0">
C:          <item key="registrantName">AusRegistry Pty Ltd</item>
C:          <item key="eligibilityType">Company</item>
C:          <item key="policyReason">1</item>
C:        </kvlist>
C:        <explanation>Sale of business</explanation>
C:      </registrantTransfer>
C:      <clTRID>ABC12345</clTRID>
C:    </command>
C:  </extension>
C:</epp>]]></artwork>
        </figure>
        <t>When
          a &lt;registrantTransfer&gt; command has been processed
          successfully, the EPP &lt;resData&gt; element MUST contain an
          &lt;rtrnData&gt; element that identifies the registrant
          namespace. The &lt;rtrnData&gt; element contains the following
          child elements. 
          <list style="symbols">
            <t>A &lt;name&gt; element that contains the fully qualified
              name of the domain object. </t>
            <t>An &lt;exDate&gt; element that contains the date and time
              identifying the end of the domain object's registration
              period. </t>
          </list>
        </t>
        <figure>
          <preamble>Example &lt;registrantTransfer&gt; response:</preamble>
          <artwork><![CDATA[
C:<epp xmlns="urn:ietf:params:xml:ns:epp-1.0">
C:  <response>
C:    <result code="1000">
C:      <msg lang="en">Command completed successfully</msg>
C:    </result>
C:    <resData>
C:      <rtrnData xmlns="urn:X-ar:params:xml:ns:registrant-1.0">
C:        <name>example.com.au</name>
C:        <exDate>2001-04-03T22:00:00.0Z</exDate>
C:      </rtrnData>
C:    </resData>
C:    <trID>
C:      <clTRID>ABC12345</clTRID>
C:      <svTRID>XYZ54321</svTRID>
C:    </trID>
C:  </response>
C:</epp>]]></artwork>
        </figure>
        <t>When
          a &lt;registrantTransfer&gt; command has been processed
          successfully, the EPP &lt;resData&gt; element MUST contain an
          &lt;rtrnData&gt; element identifying the registrant
          namespace. The &lt;rtrnData&gt; element contains the following
          child elements. 
          <list style="symbols">
            <t>A &lt;name&gt; element that contains the fully qualified
              name of the domain object. </t>
            <t>An &lt;exDate&gt; element that contains the date and time
              identifying the end of the domain object's registration
              period. </t>
          </list>
        </t>
        <figure>
          <preamble>Example &lt;registrantTransfer&gt; response:</preamble>
          <artwork><![CDATA[
C:<epp xmlns="urn:ietf:params:xml:ns:epp-1.0">
C:  <response>
C:    <result code="1000">
C:      <msg lang="en">Command completed successfully</msg>
C:    </result>
C:    <resData>
C:      <rtrnData xmlns="urn:X-ar:params:xml:ns:registrant-1.0">
C:       <name>example.com</name>
C:       <exDate>2001-04-03T22:00:00.0Z</exDate>
C:      </rtrnData>
C:    </resData>
C:    <trID>
C:      <clTRID>ABC12345</clTRID>
C:      <svTRID>XYZ54321</svTRID>
C:    </trID>
C:  </response>
C:</epp>]]></artwork>
        </figure>
      </section>
    </section>
    </section>
    <section title="Formal Syntax" toc="default">
      <t>An EPP object mapping is specified in XML Schema notation. The
        formal syntax presented here is a complete schema representation
        of the object mapping suitable for automated validation of EPP
        XML instances. The BEGIN and END tags are not part of the
        schema;
        they are used to note the beginning and ending of the
        schema for
        URI registration purposes.</t>
      <figure>
        <artwork>
   BEGIN<![CDATA[
<?xml version="1.0" encoding="UTF-8"?>
<schema targetNamespace="urn:X-ar:params:xml:ns:registrant-1.0"
  xmlns:registrant="urn:X-ar:params:xml:ns:registrant-1.0" 
  xmlns:eppcom="urn:ietf:params:xml:ns:eppcom-1.0"
  xmlns:epp="urn:ietf:params:xml:ns:epp-1.0" 
  xmlns:domain="urn:ietf:params:xml:ns:domain-1.0"
  xmlns:kv="urn:X-ar:params:xml:ns:kv-1.0" 
  xmlns="http://www.w3.org/2001/XMLSchema"
  elementFormDefault="qualified">

  <!--
    Import common element types.
  -->
  <import namespace="urn:ietf:params:xml:ns:eppcom-1.0"
    schemaLocation="eppcom-1.0.xsd" />
  <import namespace="urn:ietf:params:xml:ns:epp-1.0"
    schemaLocation="epp-1.0.xsd" />
  <import namespace="urn:ietf:params:xml:ns:domain-1.0"
    schemaLocation="domain-1.0.xsd" />
  <import namespace="urn:X-ar:params:xml:ns:kv-1.0"
    schemaLocation="kv-1.0.xsd" />
  <annotation>
    <documentation> .au Domain Extensions to the Extensible Provisioning
      Protocol v1.0. schema.</documentation>
  </annotation>

  <!--
    Protocol extension framework elements.
  -->
  <element name="command" type="registrant:commandType" />

  <!--
    Protocol extension type definitions.
  -->
  <complexType name="commandType">
    <sequence>
      <element name="registrantTransfer" 
        type="registrant:registrantTransferType" />
      <element name="clTRID" type="epp:trIDStringType"
        minOccurs="0" />
    </sequence>
  </complexType>

  <!--
    Type definitions.
  -->
  <complexType name="registrantTransferType">
    <sequence>
      <element name="name" type="eppcom:labelType" />
      <element name="curExpDate" type="date" />
      <element name="period" type="domain:periodType" minOccurs="0" />
      <group ref="kv:kvlist" />
      <element name="explanation" type="normalizedString" />
    </sequence>
  </complexType>

  <!--
    Protocol extension framework response elements.
  -->
  <element name="rtrnData" type="registrant:rtrnDataType" />
  <complexType name="rtrnDataType">
    <sequence>
      <element name="name" type="eppcom:labelType" />
      <element name="exDate" type="dateTime" />
    </sequence>
  </complexType>

  <!--
    End of schema.
  -->
</schema>
]]>   END
        </artwork>
      </figure>
    </section>
    <section title="Internationalization Considerations" toc="default">
      <t>
        EPP is represented in XML, which provides native support for
        encoding information using the Unicode character set and its
        more compact representations, including UTF-8
        <xref target="RFC3629" />
        .
        Conformant XML processors recognize both UTF-8 and UTF-16
        <xref target="RFC2781" />.
        Though XML includes provisions to identify and use
        other
        character encodings through use of an "encoding" attribute
        in an
        &lt;?xml?&gt; declaration, use of UTF-8 is RECOMMENDED in
        environments where parser encoding support incompatibility
        exists.
      </t>
      <t>
        As an extension of the EPP core protocol specification
        <xref target="RFC5730" />
        , the
        elements, element content, attributes, and attribute values
        described in this document MUST inherit the internationalization
        conventions used to represent higher-layer domain and core
        protocol structures present in an XML instance that includes
        this extension.
      </t>
    </section>
    <section title="Security Considerations" toc="default">
      <t>
        The mapping extensions described in this document do not
        provide
        any security services beyond those described by EPP
        <xref target="RFC5730" /> and protocol
        layers used by EPP. The security considerations
        described in
        these other specifications apply to this
        specification as well.
      </t>
      <t>
        As with other domain object transforms, the EPP transform
        operations described in this document MUST be restricted to the
        sponsoring client as authenticated using the mechanisms
        described in Sections 2.9.1.1 and 7 of <xref target="RFC5730" />. Any
        attempt to perform a transform operation on a domain object
        by
        any client other than the sponsoring client MUST be rejected
        with an appropriate EPP authorization error.
      </t>
    </section>
  </middle>
  <back>
    <references title='Normative References'>
    &rfc2119;
    &rfc5730;
    &ausreg-kv-1.0;
    &rfc3629;
    &rfc2781;
    </references>
    <references title='Informative References'>
    &w3crec-xml-20040204;
    &w3crec-xmlschema-1-20041028;
    </references>
  </back>
</rfc>
