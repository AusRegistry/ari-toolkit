


EPP Key-Value Mapping                                        J. Mitchell
                                                     AusRegistry Pty Ltd
                                                      September 17, 2010


    Key-Value Mapping for the Extensible Provisioning Protocol (EPP)

Abstract

   This document describes an Extensible Provisioning Protocol (EPP)
   extension mapping for the transport of arbitrary data associated with
   domain names stored in a shared central repository.

Status of This Document

   This document specifies an extension to the EPP protocol first
   implemented in AusRegistry's Domain Name Registry EPP service.
   Discussion and suggestions for improvements are welcome.  Please
   refer to AusRegistry for more information on the status of this
   document.  Distribution of this document and use of the protocol
   extensions defined within is unrestricted and unlimited.

Copyright Notice

   Copyright (C) AusRegistry International Pty Ltd (2010)


























Mitchell                                                        [Page 1]

                          EPP Key-Value Mapping           September 2010


Table of Contents

   1.  Introduction . . . . . . . . . . . . . . . . . . . . . . . . .  3
     1.1.  Conventions Used In This Document  . . . . . . . . . . . .  3
   2.  EPP Command Mapping  . . . . . . . . . . . . . . . . . . . . .  3
     2.1.  EPP Query Commands . . . . . . . . . . . . . . . . . . . .  3
       2.1.1.  EPP <check> Command  . . . . . . . . . . . . . . . . .  3
       2.1.2.  EPP <info> Command . . . . . . . . . . . . . . . . . .  4
       2.1.3.  EPP <transfer> Command . . . . . . . . . . . . . . . .  6
     2.2.  EPP Transform Commands . . . . . . . . . . . . . . . . . .  6
       2.2.1.  EPP <create> Command . . . . . . . . . . . . . . . . .  6
       2.2.2.  EPP <delete> Command . . . . . . . . . . . . . . . . .  7
       2.2.3.  EPP <renew> Command  . . . . . . . . . . . . . . . . .  7
       2.2.4.  EPP <transfer> Command . . . . . . . . . . . . . . . .  8
       2.2.5.  EPP <update> Command . . . . . . . . . . . . . . . . .  8
   3.  Formal Syntax  . . . . . . . . . . . . . . . . . . . . . . . .  9
   4.  Internationalization Considerations  . . . . . . . . . . . . . 11
   5.  Security Considerations  . . . . . . . . . . . . . . . . . . . 11
   6.  References . . . . . . . . . . . . . . . . . . . . . . . . . . 11
     6.1.  Normative References . . . . . . . . . . . . . . . . . . . 11
     6.2.  Informative References . . . . . . . . . . . . . . . . . . 12
   Author's Address . . . . . . . . . . . . . . . . . . . . . . . . . 12





























Mitchell                                                        [Page 2]

                          EPP Key-Value Mapping           September 2010


1.  Introduction

   This document describes an domain mapping for version 1.0 of the
   Extensible Provisioning Protocol (EPP) that allows for the transport
   of arbitrary data associated with a domain name.  This mapping, an
   extension of the domain name mapping described in [RFC5731], is
   specified using the Extensible Markup Language (XML) 1.0, as
   described in [W3C.REC-xml-20040204], and XML Schema notation, as
   described in [W3C.REC-xmlschema-1-20041028] and [W3C.REC-xmlschema-2-
   20041028].

   The EPP core protocol specification [RFC5730] provides a complete
   description of EPP command and response structures.  A thorough
   understanding of the base protocol and specification of relevant
   extensions is necessary to understand the mapping described in this
   document.

1.1.  Conventions Used In This Document

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in [RFC2119] .

   In examples, "C:" represents lines sent by a protocol client and "S:"
   represents lines returned by a protocol server.  Indentation and
   white space in examples are provided only to illustrate element
   relationships and are not a REQUIRED feature of this protocol.


2.  EPP Command Mapping

   A detailed description of the EPP syntax and semantics can be found
   in the EPP core protocol specification [RFC5730] .  The command
   mappings described here are specifically for use in provisioning and
   managing generic domain extensions via EPP.

2.1.  EPP Query Commands

   EPP provides three commands to retrieve object information: <check>
   to determine if an object is known to the server, <info> to retrieve
   detailed information associated with an object, and <transfer> to
   retrieve object transfer status information.

2.1.1.  EPP <check> Command

   This extension does not add any elements to the EPP <check> command
   or <check> response described in the EPP domain mapping [RFC5731] .




Mitchell                                                        [Page 3]

                          EPP Key-Value Mapping           September 2010


2.1.2.  EPP <info> Command

   This extension does not add any elements to the EPP <info> command
   described in the EPP domain mapping [RFC5731].  However, additional
   elements are defined for the <info> response.

   When an <info> command has been processed successfully, the EPP
   <resData> element MUST contain child elements as described in the EPP
   domain mapping [RFC5731].  In addition, the EPP <extension> element
   MUST contain an <infData> element identifying the kv namespace.  The
   <infData> element contains the following child elements:

   o  One or more <kvlist> elements that contain a list of key-value
      items that are associated with the specified domain.  A MANDATORY
      "name" attribute MUST be present to identify the name of the key-
      value list.

   The <kvlist> element contains the following child elements:

   o  One or more <item> elements that contain the value of an item in
      the list.  A MANDATORY "key" attribute MUST be present to indicate
      the key for the specified item.





























Mitchell                                                        [Page 4]

                          EPP Key-Value Mapping           September 2010


   Example <info> response:

   C:<epp xmlns="urn:ietf:params:xml:ns:epp-1.0"
   C:  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   C:  xsi:schemaLocation="urn:ietf:params:xml:ns:epp-1.0 epp-1.0.xsd">
   C:  <response>
   C:    <result code="1000">
   C:      <msg lang="en">Command completed successfully</msg>
   C:    </result>
   C:    <resData>
   C:      <infData xmlns="urn:ietf:params:xml:ns:domain-1.0"
   C:        xsi:schemaLocation=
   C:           "urn:ietf:params:xml:ns:domain-1.0 domain-1.0.xsd">
   C:        <name>example.com.au</name>
   C:        <roid>D0001337-AR</roid>
   C:        <status s="ok" />
   C:        <registrant>Registrant</registrant>
   C:        <contact type="tech">TECH-1</contact>
   C:        <clID>Client1</clID>
   C:        <crID>Client2</crID>
   C:        <crDate>2010-09-02T04:26:42.0Z</crDate>
   C:        <exDate>2012-09-02T04:26:42.0Z</exDate>
   C:        <authInfo>
   C:          <pw>123paSSword</pw>
   C:        </authInfo>
   C:      </infData>
   C:    </resData>
   C:    <extension>
   C:      <infData xmlns="urn:X-ar:params:xml:ns:kv-1.0">
   C:        <kvlist name="au">
   C:          <item key="eligibilityType">Company</item>
   C:          <item key="policyReason">1</item>
   C:          <item key="registrantIDType">ACN</item>
   C:          <item key="registrantIDValue">123456789</item>
   C:        </kvlist>
   C:      </infData>
   C:    </extension>
   C:    <trID>
   C:      <clTRID>ABC12345</clTRID>
   C:      <svTRID>XYZ54321</svTRID>
   C:    </trID>
   C:  </response>
   C:</epp>








Mitchell                                                        [Page 5]

                          EPP Key-Value Mapping           September 2010


2.1.3.  EPP <transfer> Command

   This extension does not add any elements to the EPP <transfer>
   command or <transfer> response described in the EPP domain mapping
   [RFC5731] .

2.2.  EPP Transform Commands

   EPP provides five commands to transform objects: <create> to create
   an instance of an object, <delete> to delete an instance of an
   object, <renew> to extend the validity period of an object,
   <transfer> to manage object sponsorship changes, and <update> to
   change information associated with an object.

2.2.1.  EPP <create> Command

   This extension defines additional elements for the EPP <create>
   command described in the EPP domain mapping [RFC5731] .

   In addition to the EPP command elements described in the EPP domain
   mapping [RFC5731], the <create> command MUST contain an <extension>
   element, which MUST contain a <create> element identifying the kv
   namespace.  The <create> element contains the following child
   elements:

   o  One or more <kvlist> elements that contain the list of key-value
      items to be associated with the specified domain.  A MANDATORY
      "name" attribute MUST be present to identify the name of the key-
      value list.

   The <kvlist> element contains the following child elements:

   o  One or more <item> elements that contain the value of an item in
      the list.  A MANDATORY "key" attribute MUST be present to indicate
      the key for the specified item.
















Mitchell                                                        [Page 6]

                          EPP Key-Value Mapping           September 2010


   Example <create> command:

   C:<?xml version="1.0" encoding="UTF-8"?>
   C:<epp xmlns="urn:ietf:params:xml:ns:epp-1.0"
   C:  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   C:  xsi:schemaLocation="urn:ietf:params:xml:ns:epp-1.0 epp-1.0.xsd">
   C:  <command>
   C:    <create>
   C:      <create xmlns="urn:ietf:params:xml:ns:domain-1.0"
   C:        xsi:schemaLocation=
   C:           "urn:ietf:params:xml:ns:domain-1.0 domain-1.0.xsd">
   C:        <name>example.com.au</name>
   C:        <registrant>Registrant</registrant>
   C:        <contact type="tech">Tech1</contact>
   C:        <authInfo>
   C:          <pw>SjweDcB84E</pw>
   C:        </authInfo>
   C:      </create>
   C:    </create>
   C:    <extension>
   C:      <create xmlns="urn:X-ar:params:xml:ns:kv-1.0"
   C:        xsi:schemaLocation=
   C:           "urn:X-ar:params:xml:ns:kv-1.0 kv-1.0.xsd">
   C:        <kvlist name="au">
   C:          <item key="eligibilityType">Company</item>
   C:          <item key="policyReason">1</item>
   C:          <item key="registrantName">My Registrant</item>
   C:        </kvlist>
   C:      </create>
   C:    </extension>
   C:    <clTRID>ABC-12345</clTRID>
   C:  </command>
   C:</epp>

   No additional elements are defined for the EPP <create> response.

2.2.2.  EPP <delete> Command

   This extension does not add any elements to the EPP <delete> command
   or <delete> response described in the EPP domain mapping [RFC5731] .

2.2.3.  EPP <renew> Command

   This extension does not add any elements to the EPP <renew> command
   or <renew> response described in the EPP domain mapping [RFC5731] .






Mitchell                                                        [Page 7]

                          EPP Key-Value Mapping           September 2010


2.2.4.  EPP <transfer> Command

   This extension does not add any elements to the EPP <transfer>
   command or <transfer> response described in the EPP domain mapping
   [RFC5731] .

2.2.5.  EPP <update> Command

   This extension defines additional elements for the EPP <update>
   command described in the EPP domain mapping [RFC5731] .

   In addition to the EPP command elements described in the EPP domain
   mapping [RFC5731], the <update> command MUST contain an <extension>
   element, which MUST contain a <create> element identifying the kv
   namespace.  The <update> element contains the following child
   elements:

   o  One or more <kvlist> elements that contain the list of key-value
      items to be associated with the specified domain.  A MANDATORY
      "name" attribute MUST be present to identify the name of the key-
      value list.

   The <kvlist> element contains the following child elements:

   o  One or more <item> elements that contain the value of an item in
      the list.  A MANDATORY "key" attribute MUST be present to indicate
      the key for the specified item.
























Mitchell                                                        [Page 8]

                          EPP Key-Value Mapping           September 2010


   Example <update> command:

   C:<?xml version="1.0" encoding="UTF-8"?>
   C:<epp xmlns="urn:ietf:params:xml:ns:epp-1.0"
   C:  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   C:  xsi:schemaLocation="urn:ietf:params:xml:ns:epp-1.0 epp-1.0.xsd">
   C:  <command>
   C:    <update>
   C:      <update xmlns="urn:ietf:params:xml:ns:domain-1.0"
   C:        xsi:schemaLocation=
   C:           "urn:ietf:params:xml:ns:domain-1.0 domain-1.0.xsd">
   C:        <name>example.com.au</name>
   C:      </update>
   C:    </update>
   C:    <extension>
   C:      <update xmlns="urn:X-ar:params:xml:ns:kv-1.0"
   C:        xsi:schemaLocation=
   C:           "urn:X-ar:params:xml:ns:kv-1.0 kv-1.0.xsd">
   C:        <kvlist name="au">
   C:          <item key="eligibilityType">Company</item>
   C:          <item key="policyReason">1</item>
   C:          <item key="registrantName">New Registrant</item>
   C:        </kvlist>
   C:      </update>
   C:    </extension>
   C:    <clTRID>ABC-12345</clTRID>
   C:  </command>
   C:</epp>

   No additional elements are defined for the EPP <update> response.


3.  Formal Syntax

   An EPP object mapping is specified in XML Schema notation.  The
   formal syntax presented here is a complete schema representation of
   the object mapping suitable for automated validation of EPP XML
   instances.  The BEGIN and END tags are not part of the schema; they
   are used to note the beginning and ending of the schema for URI
   registration purposes.

           BEGIN
   <?xml version="1.0" encoding="UTF-8"?>
   <schema targetNamespace="urn:X-ar:params:xml:ns:kv-1.0"
      xmlns="http://www.w3.org/2001/XMLSchema"
      xmlns:kv="urn:X-ar:params:xml:ns:kv-1.0"
      elementFormDefault="qualified">




Mitchell                                                        [Page 9]

                          EPP Key-Value Mapping           September 2010


      <!--
         Definition of kvlist to be reused in other DTDs
      -->
      <group name="kvlist">
         <sequence>
            <element name="kvlist" type="kv:listType" />
         </sequence>
      </group>

      <!--
         Command extension elements
       -->
      <element name="create" type="kv:createType" />
      <element name="update" type="kv:updateType" />

      <complexType name="createType">
         <group ref="kv:kvlist" maxOccurs="unbounded" />
      </complexType>

      <complexType name="updateType">
         <group ref="kv:kvlist" maxOccurs="unbounded" />
      </complexType>

      <complexType name="listType">
         <sequence maxOccurs="unbounded">
            <element name="item" type="kv:itemType" />
         </sequence>
         <attribute name="name" type="token" use="required" />
      </complexType>

      <complexType name="itemType">
         <simpleContent>
            <extension base="token">
               <attribute name="key" type="token" use="required" />
            </extension>
         </simpleContent>
      </complexType>

      <!--
         Response extension types
       -->
      <element name="infData" type="kv:infDataType" />

      <complexType name="infDataType">
         <group ref="kv:kvlist" maxOccurs="unbounded" />
      </complexType>

   </schema>



Mitchell                                                       [Page 10]

                          EPP Key-Value Mapping           September 2010


   END


4.  Internationalization Considerations

   EPP is represented in XML, which provides native support for encoding
   information using the Unicode character set and its more compact
   representations, including UTF-8 [RFC3629] .  Conformant XML
   processors recognize both UTF-8 and UTF-16 [RFC2781].  Though XML
   includes provisions to identify and use other character encodings
   through use of an "encoding" attribute in an <?xml?> declaration, use
   of UTF-8 is RECOMMENDED in environments where parser encoding support
   incompatibility exists.

   As an extension of the EPP domain mapping [RFC5731] , the elements,
   element content, attributes, and attribute values described in this
   document MUST inherit the internationalization conventions used to
   represent higher-layer domain and core protocol structures present in
   an XML instance that includes this extension.


5.  Security Considerations

   The mapping extensions described in this document do not provide any
   security services beyond those described by EPP [RFC5730] , the EPP
   domain name mapping [RFC5731] , and protocol layers used by EPP.  The
   security considerations described in these other specifications apply
   to this specification as well.

   As with other domain object transforms, the EPP transform operations
   described in this document MUST be restricted to the sponsoring
   client as authenticated using the mechanisms described in Sections
   2.9.1.1 and 7 of [RFC5730] .  Any attempt to perform a transform
   operation on a domain object by any client other than the sponsoring
   client MUST be rejected with an appropriate EPP authorization error.


6.  References

6.1.  Normative References

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119, March 1997.

   [RFC5730]  Hollenbeck, S., "Extensible Provisioning Protocol (EPP)",
              STD 69, RFC 5730, August 2009.

   [RFC5731]  Hollenbeck, S., "Extensible Provisioning Protocol (EPP)



Mitchell                                                       [Page 11]

                          EPP Key-Value Mapping           September 2010


              Domain Name Mapping", STD 69, RFC 5731, August 2009.

   [RFC3629]  Yergeau, F., "UTF-8, a transformation format of ISO
              10646", STD 63, RFC 3629, November 2003.

   [RFC2781]  Hoffman, P. and F. Yergeau, "UTF-16, an encoding of ISO
              10646", RFC 2781, February 2000.

6.2.  Informative References

   [W3C.REC-xml-20040204]
              Maler, E., Paoli, J., Yergeau, F., Sperberg-McQueen, C.,
              and T. Bray, "Extensible Markup Language (XML) 1.0 (Third
              Edition)", World Wide Web Consortium FirstEdition REC-xml-
              20040204, February 2004,
              <http://www.w3.org/TR/2004/REC-xml-20040204>.

   [W3C.REC-xmlschema-1-20041028]
              Thompson, H., Mendelsohn, N., Maloney, M., and D. Beech,
              "XML Schema Part 1: Structures Second Edition", World Wide
              Web Consortium Recommendation REC-xmlschema-1-20041028,
              October 2004,
              <http://www.w3.org/TR/2004/REC-xmlschema-1-20041028>.


Author's Address

   James Mitchell
   AusRegistry Pty Ltd

   Email: support@ausregistry.com.au




















Mitchell                                                       [Page 12]

