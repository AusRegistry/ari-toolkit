<?xml version="1.0" encoding="UTF-8"?>
<!--
    Checkstyle-Configuration: Registry Portal Checks
    Description: none
-->
<!DOCTYPE module PUBLIC "-//Puppy Crawl//DTD Check Configuration 1.3//EN" "http://www.puppycrawl.com/dtds/configuration_1_3.dtd">
<!--

  Checkstyle configuration that checks the sun coding conventions from:

    - the Java Language Specification at
      http://java.sun.com/docs/books/jls/second_edition/html/index.html

    - the Sun Code Conventions at http://java.sun.com/docs/codeconv/

    - the Javadoc guidelines at
      http://java.sun.com/j2se/javadoc/writingdoccomments/index.html

    - the JDK Api documentation http://java.sun.com/j2se/docs/api/index.html

    - some best practices

  Checkstyle is very configurable. Be sure to read the documentation at
  http://checkstyle.sf.net (or in your downloaded distribution).

  Most Checks are configurable, be sure to consult the documentation.

  To completely disable a check, just comment it out or delete it from the file.

  Finally, it is worth reading the documentation.

-->

<module name="Checker">
    <property name="severity" value="error" /> <!-- Different from Sun Standard Checkstyle -->
    <!--
        If you set the basedir property below, then all reported file
        names will be relative to the specified directory. See
        http://checkstyle.sourceforge.net/5.x/config.html#Checker

        <property name="basedir" value="${basedir}"/>
    -->

    <module name="SuppressionFilter">
        <property name="file" value="${checkstyleConfigDir}/checkstyle-suppressions.xml"/>
    </module>

    <!-- Filter out Checkstyle warnings that have been suppressed with the @SuppressWarnings annotation -->
    <module name="SuppressWarningsFilter" />

    <!-- Checks whether files end with a new line. -->
    <!-- See http://checkstyle.sf.net/config_misc.html#NewlineAtEndOfFile -->
    <module name="NewlineAtEndOfFile">
        <property name="severity" value="ignore" />
    </module>

    <!-- Checks that a package-info.java file exists for each package. -->
    <!-- See http://checkstyle.sf.net/config_javadoc.html#JavadocPackage -->
    <module name="JavadocPackage" />

    <!-- Checks that property files contain the same keys. -->
    <!-- See http://checkstyle.sf.net/config_misc.html#Translation -->
    <module name="Translation" />

    <!-- Checks for Size Violations. -->
    <!-- See http://checkstyle.sf.net/config_sizes.html -->
    <module name="FileLength">
        <property name="max" value="2000" />
        <property name="fileExtensions" value="java,scala,gradle,properties,xml" />
    </module>

    <!-- Checks for whitespace -->
    <!-- See http://checkstyle.sf.net/config_whitespace.html -->
    <module name="FileTabCharacter">
        <property name="fileExtensions" value="java" />
    </module>

    <!-- Miscellaneous other checks. -->
    <!-- See http://checkstyle.sf.net/config_misc.html -->

    <module name="RegexpSingleline">
        <property name="format" value="\s+$" />
        <property name="minimum" value="0" />
        <property name="maximum" value="0" />
        <property name="message" value="Line has trailing spaces." />
        <property name="fileExtensions" value="java,xml" />
    </module>

    <module name="TreeWalker">

        <module name="JavadocType">
            <property name="scope" value="public" />
        </module>
        <module name="JavadocMethod">
            <property name="scope" value="protected" />
            <property name="allowUndeclaredRTE" value="true" />
        </module>
        <module name="JavadocVariable">
            <property name="scope" value="public" />
        </module>
        <module name="JavadocStyle" />

        <!-- Checks for Naming Conventions. -->
        <!-- See http://checkstyle.sf.net/config_naming.html -->
        <module name="ConstantName" />
        <module name="LocalFinalVariableName" />
        <module name="LocalVariableName" />
        <module name="MemberName" />
        <module name="MethodName" />
        <module name="PackageName" />
        <module name="ParameterName" />
        <module name="StaticVariableName" />
        <module name="TypeName" />
            
            <!-- Checks for Headers                                -->
            <!-- See http://checkstyle.sf.net/config_header.html   -->
            <!-- <module name="Header">                            -->
                <!-- The follow property value demonstrates the ability     -->
                <!-- to have access to ANT properties. In this case it uses -->
                <!-- the ${basedir} property to allow Checkstyle to be run  -->
                <!-- from any directory within a project. See property      -->
                <!-- expansion,                                             -->
                <!-- http://checkstyle.sf.net/config.html#properties        -->
                <!-- <property                                              -->
                <!--     name="headerFile"                                  -->
                <!--     value="${basedir}/java.header"/>                   -->
            <!-- </module> -->

            <!-- Following interprets the header file as regular expressions. -->
            <!-- <module name="RegexpHeader"/>                                -->


        <!-- Checks for imports -->
        <!-- See http://checkstyle.sf.net/config_import.html -->
        <module name="IllegalImport" /> <!-- defaults to sun.* packages -->
        <module name="RedundantImport" />
        <module name="UnusedImports" />

        <!-- Checks for Size Violations. -->
        <!-- See http://checkstyle.sf.net/config_sizes.html -->
        <module name="LineLength">
            <property name="max" value="120" /> <!-- Different from Sun Standard Checkstyle -->
        </module>
        <module name="MethodLength" />
        <module name="ParameterNumber" />

        <!-- Checks for whitespace -->
        <!-- See http://checkstyle.sf.net/config_whitespace.html -->
        <module name="EmptyForIteratorPad" />
        <!--<module name="GenericWhitespace"/> -->
        <module name="MethodParamPad" />
        <module name="NoWhitespaceAfter" />
        <module name="NoWhitespaceBefore" />
        <module name="OperatorWrap" />
        <module name="ParenPad" />
        <module name="TypecastParenPad" />
        <module name="WhitespaceAfter" />
        <module name="WhitespaceAround" />


        <!-- Modifier Checks -->
        <!-- See http://checkstyle.sf.net/config_modifier.html -->
        <module name="ModifierOrder" />
        <module name="RedundantModifier" />

        <!-- Checks for blocks. You know, those {}'s -->
        <!-- See http://checkstyle.sf.net/config_blocks.html -->
        <module name="AvoidNestedBlocks" />
        <module name="EmptyBlock" />
        <module name="LeftCurly" />
        <module name="NeedBraces" />
        <module name="RightCurly" />

        <!-- Checks for common coding problems -->
        <!-- See http://checkstyle.sf.net/config_coding.html -->
        <!-- module name="DoubleCheckedLocking"/ -->    <!-- MY FAVOURITE -->
        <module name="EmptyStatement" />
        <module name="EqualsHashCode" />
        <module name="HiddenField">
            <property name="tokens" value="VARIABLE_DEF" />
        </module>
        <module name="IllegalInstantiation" />
        <module name="InnerAssignment">
            <property name="tokens"
                value="BAND_ASSIGN,BOR_ASSIGN,BSR_ASSIGN,BXOR_ASSIGN,DIV_ASSIGN,MINUS_ASSIGN,MOD_ASSIGN,PLUS_ASSIGN,SL_ASSIGN,SR_ASSIGN,STAR_ASSIGN" />
        </module>
        <module name="MagicNumber">
            <property name="severity" value="ignore" />
        </module>
        <module name="MissingSwitchDefault" />

        <module name="SimplifyBooleanExpression" />
        <module name="SimplifyBooleanReturn" />

        <!-- Checks for class design -->
        <!-- See http://checkstyle.sf.net/config_design.html -->
        <!-- module name="DesignForExtension"/ --> <!-- Makes it too difficult to mock objects -->
        <module name="FinalClass" />
        <module name="HideUtilityClassConstructor" />
        <module name="InterfaceIsType" />
        <module name="VisibilityModifier">
            <property name="publicMemberPattern" value="^thrown|componentResource$" />
        </module>

        <!-- Miscellaneous other checks. -->
        <!-- See http://checkstyle.sf.net/config_misc.html -->
        <module name="ArrayTypeStyle" />
        <module name="TodoComment">
            <!--<property name="format" value="(?i)(todo|fixme|xxx)"/>-->
        </module>
        <module name="UpperEll" />

        <module name="DeclarationOrder" />

        <module name="Regexp">
            <property name="format" value="System\.out\.print" />
            <property name="illegalPattern" value="true" />
            <property name="ignoreComments" value="true" />
        </module>
        <module name="Regexp">
            <property name="format" value="printStackTrace" />
            <property name="illegalPattern" value="true" />
            <property name="ignoreComments" value="true" />
        </module>

        <!-- Make the @SuppressWarnings annotations available to Checkstyle -->
        <module name="SuppressWarningsHolder" />

    </module>
    
</module>
